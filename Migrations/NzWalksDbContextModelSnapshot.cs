// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NzWalks.Data;

#nullable disable

namespace NzWalks.Migrations
{
    [DbContext(typeof(NzWalksDbContext))]
    partial class NzWalksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NzWalks.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c900add3-213f-4615-bcd7-788c75805d91"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("b984ecd3-e578-43c5-8565-6ec56cac3216"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("b75d59ff-04e4-44ff-8bb1-d5f68ee8fec8"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NzWalks.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1270242a-44a1-42d6-9d0d-c1372c852e1a"),
                            Code = "GP",
                            Name = "Globalization Partners",
                            RegionImageUrl = "gp.jpeg"
                        },
                        new
                        {
                            Id = new Guid("0d32f077-5f74-40ba-bd0f-3fa2b6e7757c"),
                            Code = "SC",
                            Name = "Stem Center",
                            RegionImageUrl = "stem.jpeg"
                        },
                        new
                        {
                            Id = new Guid("76cdfc42-5e6b-4696-ac77-ea8759ce71d0"),
                            Code = "KE",
                            Name = "Kenya",
                            RegionImageUrl = "kenya.jpeg"
                        },
                        new
                        {
                            Id = new Guid("f807fc4d-69d7-4da7-9e2b-b0d63f75d9c6"),
                            Code = "USA",
                            Name = "America",
                            RegionImageUrl = "states.jpeg"
                        });
                });

            modelBuilder.Entity("NzWalks.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NzWalks.Models.Domain.Walk", b =>
                {
                    b.HasOne("NzWalks.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NzWalks.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
